<style>
html, body {
  height: 100%;
}

.form-signin {
  width: 100%;
  max-width: 330px;
  padding: 15px;
  margin: auto;
}
.form-signin .checkbox {
  font-weight: 400;
}
.form-signin .form-control {
  position: relative;
  box-sizing: border-box;
  height: auto;
  padding: 10px;
  font-size: 16px;
}
.form-signin .form-control:focus {
  z-index: 2;
}
#inputEmail {
  margin-bottom: -1px;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}
#inputPassword {
  margin-bottom: 10px;
  border-top-left-radius: 0;
  border-top-right-radius: 0;
}
</style>

<div class="main">
    <span vg-if="!c.Init" vg-content='c.Initialize()'>Loading...</span>
    <div class="alert alert-warning alert-dismissible fade show" role="alert" id="alert" vg-if="c.HasError">
      <strong>Error!</strong> <span vg-html="c.ErrorMessage"></span>
      <button type="button" class="close" data-dismiss="alert" aria-label="Close" @click="c.HasError = false">
        <span aria-hidden="true">&times;</span>
      </button>
    </div>
    <form class="form-signin">
        <div align="center"><img class="mb-4" src="/logo.svg" alt="" width="120" height="120"></div>
        <h1 class="h3 mb-3 font-weight-normal" align="center">Account</h1>
        <label for="inputEmail" class="sr-only">Email address</label>
        <vgform:Input :Value="vgform.StringPtr{&c.Email}" type="email" id="inputEmail" class="form-control" placeholder="Email address"></vgform:Input>
        <label for="inputPassword" class="sr-only">Password</label>
        <vgform:Input :Value="vgform.StringPtr{&c.Password}" type="password" id="inputPassword" class="form-control" placeholder="Password"></vgform:Input>
        <button class="btn btn-lg btn-primary btn-block" type="reset" @click="c.Login(event)"><span vg-if="!c.Registering">Sign in</span><span vg-if="c.Registering">Register</span></button>
        <a @click="c.Registering = !c.Registering" href="#"><span vg-if="c.Registering">Already have an account? Sign in!</span><span vg-if="!c.Registering">Need an account? Register!</span></a>
        <a vg-if="!c.Registering" href="#" @click="c.ResetPassword(event)">Forgot your password? Reset it!</a>
    </form>
    <img style="position: absolute; top: 50%; left: 50%;" src="https://cdnjs.cloudflare.com/ajax/libs/galleriffic/2.0.1/css/loader.gif" vg-if="c.Loading">
</div>

<script type="application/x-go">
type Login struct {
    Init bool `vugu:"data"`
    App *firebase.Firebase
    Handle func(error)
    Auth *auth.Auth
    Email string `vugu:"data"`
    Password string `vugu:"data"`
    HasError bool `vugu:"data"`
    ErrorMessage string `vugu:"data"`
    Logged func(string, vugu.EventEnv)
    Registering bool `vugu:"data"`
    Loading bool `vugu:"data"`
}

func (c *Login) Initialize() string {
    c.Auth = auth.CreateAuth(c.App)
    c.Init = true
    return ""
}

func (c *Login) SignIn(event vugu.DOMEvent) {
  user, err := c.Auth.SignInWithEmailAndPassword(c.Email, c.Password)
  if err != nil {
      ee := event.EventEnv()
      ee.Lock()
      c.HasError = true
      c.ErrorMessage = err.Error()
      c.Loading = false
      ee.UnlockRender()
      return
  }
  c.Logged(user.OtherData.LocalID, event.EventEnv())
}

func (c *Login) Register(event vugu.DOMEvent) {
  user, err := c.Auth.SignUpWithEmailAndPassword(c.Email, c.Password)
  if err != nil {
      ee := event.EventEnv()
      ee.Lock()
      c.HasError = true
      c.ErrorMessage = err.Error()
      c.Loading = false
      ee.UnlockRender()
      return
  }
  database := db.CreateDatabase(c.App)
  err = database.SetData(user.OtherData.LocalID, User{Found: found})
  if err != nil {
      ee := event.EventEnv()
      ee.Lock()
      c.HasError = true
      c.ErrorMessage = err.Error()
      c.Loading = false
      ee.UnlockRender()
      return
  }
  c.Logged(user.OtherData.LocalID, event.EventEnv())
}

func (c *Login) Login(event vugu.DOMEvent) {
  if c.Registering {
    go c.Register(event)
  } else {
    go c.SignIn(event)
  }
  c.Loading = true
}

func (c *Login) Reset(ee vugu.EventEnv) {
  c.Auth.ResetPassword(c.Email)
  ee.Lock()
  c.Loading = false
  ee.UnlockRender()
}

func (c *Login) ResetPassword(event vugu.DOMEvent) {
  go c.Reset(event.EventEnv())
  c.Loading = true
}
</script>